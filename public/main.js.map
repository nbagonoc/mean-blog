{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/blog/blog.component.css","webpack:///./src/app/components/blog/blog.component.html","webpack:///./src/app/components/blog/blog.component.ts","webpack:///./src/app/components/blog/delete-blog/delete-blog.component.css","webpack:///./src/app/components/blog/delete-blog/delete-blog.component.html","webpack:///./src/app/components/blog/delete-blog/delete-blog.component.ts","webpack:///./src/app/components/blog/edit-blog/edit-blog.component.css","webpack:///./src/app/components/blog/edit-blog/edit-blog.component.html","webpack:///./src/app/components/blog/edit-blog/edit-blog.component.ts","webpack:///./src/app/components/blog/read-blog/read-blog.component.css","webpack:///./src/app/components/blog/read-blog/read-blog.component.html","webpack:///./src/app/components/blog/read-blog/read-blog.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/notAuth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/blog.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes } from \"@angular/router\";\nimport { NgModule } from \"@angular/core\";\n\n// COMPONENTS\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { ProfileComponent } from \"./components/profile/profile.component\";\nimport { BlogComponent } from \"./components/blog/blog.component\";\nimport { EditBlogComponent } from \"./components/blog/edit-blog/edit-blog.component\";\nimport { DeleteBlogComponent } from \"./components/blog/delete-blog/delete-blog.component\";\nimport { ReadBlogComponent } from \"./components/blog/read-blog/read-blog.component\";\n\n// GUARDS\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { NotAuthGuard } from \"./guards/notAuth.guard\";\n\nconst appRoutes: Routes = [\n  { path: \"\", component: HomeComponent },\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"blog\",\n    component: BlogComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"read-blog/:id\",\n    component: ReadBlogComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"edit-blog/:id\",\n    component: EditBlogComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"delete-blog/:id\",\n    component: DeleteBlogComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [NotAuthGuard]\n  },\n  { path: \"login\", component: LoginComponent, canActivate: [NotAuthGuard] },\n  { path: \"profile\", component: ProfileComponent, canActivate: [AuthGuard] },\n  { path: \"**\", component: HomeComponent }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(appRoutes)],\n  providers: [],\n  bootstrap: [],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppRoutingModule } from \"./app-routing.module\";\n\n// COMPONENTS\nimport { AppComponent } from \"./app.component\";\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { ProfileComponent } from \"./components/profile/profile.component\";\n\n// SERVICES\nimport { AuthService } from \"../app/services/auth.service\";\nimport { BlogService } from \"../app/services/blog.service\";\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { NotAuthGuard } from \"./guards/notAuth.guard\";\nimport { BlogComponent } from \"./components/blog/blog.component\";\nimport { EditBlogComponent } from \"./components/blog/edit-blog/edit-blog.component\";\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\nimport { ReadBlogComponent } from './components/blog/read-blog/read-blog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    DashboardComponent,\n    RegisterComponent,\n    LoginComponent,\n    ProfileComponent,\n    BlogComponent,\n    EditBlogComponent,\n    DeleteBlogComponent,\n    ReadBlogComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [AuthService, BlogService, AuthGuard, NotAuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container my-3\\\" *ngIf=\\\"user\\\">\\n  <div [ngClass]=\\\"messageClass\\\" class=\\\"\\\" role=\\\"alert\\\" *ngIf=\\\"message && newPost\\\">\\n    {{message}}\\n  </div>\\n  <div class=\\\"card shadow\\\">\\n    <div class=\\\"card-header\\\">\\n      welcome to the blog\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <button class=\\\"btn btn-outline-success mr-1\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"newBlogForm()\\\">\\n        <i class=\\\"fa fa-plus\\\"></i> New Post</button>\\n      <button [disabled]=\\\"loadingBlogs\\\" class=\\\"btn btn-outline-secondary\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"reloadBlogs()\\\">\\n        <i class=\\\"fa fa-sync-alt mr-1\\\"></i>Reload</button>\\n\\n      <!-- blog form -->\\n      <form [formGroup]=\\\"form\\\" new=\\\"blogForm\\\" (submit)=\\\"onBlogSubmit()\\\" *ngIf=\\\"newPost\\\">\\n        <!-- title field -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"title\\\">Title</label>\\n          <input [ngClass]=\\\"{'is-valid':form.controls.title.valid, 'is-invalid':form.controls.title.dirty && form.controls.title.errors}\\\"\\n            type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n          <div class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.required\\\">This field is required</span>\\n            <span *ngIf=\\\"(form.controls.title.dirty && form.controls.title.errors?.minlength) || (form.controls.title.dirty && form.controls.title.errors?.maxlength)\\\">min 5 and max 50 characters</span>\\n          </div>\\n        </div>\\n        <!-- body field -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"body\\\">Content Body</label>\\n          <textarea [ngClass]=\\\"{'is-valid':form.controls.body.valid, 'is-invalid':form.controls.body.dirty && form.controls.body.errors}\\\"\\n            class=\\\"form-control\\\" name=\\\"body\\\" placeholder=\\\"Content body\\\" formControlName=\\\"body\\\" autocomplete=\\\"off\\\" rows=\\\"5\\\"></textarea>\\n          <div class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"form.controls.body.dirty && form.controls.body.errors?.required\\\">This field is required</span>\\n            <span *ngIf=\\\"(form.controls.body.dirty && form.controls.body.errors?.minlength) || (form.controls.body.dirty && form.controls.body.errors?.maxlength)\\\">min 5 and max 640 characters</span>\\n          </div>\\n        </div>\\n        <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-outline-success mr-1\\\">\\n          <i class=\\\"fa fa-check-circle mr-1\\\"></i>Submit\\n        </button>\\n        <!-- <button [disabled]=\\\"processing\\\" type=\\\"button\\\" class=\\\"btn btn-outline-danger mr-1\\\" (click)=\\\"goBack()\\\">\\n          <i class=\\\"fa fa-times-circle mr-1\\\"></i>Cancel</button> -->\\n      </form>\\n    </div>\\n  </div>\\n  <!-- blog list -->\\n  <ul *ngIf=\\\"!newPost\\\" class=\\\"list-group shadow mt-3\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let blog of blogPosts\\\">\\n      <a href=\\\"#\\\" [routerLink]=\\\"['/read-blog/', blog._id]\\\" class=\\\"text-dark\\\">\\n        <h5 class=\\\"mb-0\\\">{{blog.title}}</h5>\\n      </a>\\n      <span class=\\\"small text-muted\\\">\\n        By: {{blog.createdBy}} | On: {{blog.createdAt | date:'MMM dd, yyyy'}}\\n      </span>\\n      <p class=\\\"mb-0\\\">{{blog.body}}</p>\\n      <div *ngIf=\\\"user.username == blog.createdBy\\\" class=\\\"mt-2 border-top pt-2\\\">\\n        <!-- Likes: {{blog.likes}} Dislikes:{{blog.dislikes}} -->\\n        <a [routerLink]=\\\"['/edit-blog/', blog._id]\\\" href=\\\"#\\\" class=\\\"btn btn-outline-success btn-sm mr-1\\\">\\n          <i class=\\\"fa fa-pencil-alt mr-1\\\"></i>Edit</a>\\n        <a [routerLink]=\\\"['/delete-blog/', blog._id]\\\" href=\\\"#\\\" class=\\\"btn btn-outline-danger btn-sm\\\">\\n          <i class=\\\"fa fa-trash-alt mr-1\\\"></i>Delete</a>\\n      </div>\\n    </li>\\n  </ul>\\n\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormControl,\n  FormGroup,\n  FormBuilder,\n  Validators\n} from \"@angular/forms\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { BlogService } from \"../../services/blog.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-blog\",\n  templateUrl: \"./blog.component.html\",\n  styleUrls: [\"./blog.component.css\"]\n})\nexport class BlogComponent implements OnInit {\n  messageClass;\n  message;\n  newPost = false;\n  loadingBlogs = false;\n  form;\n  processing = false;\n  user;\n  blogPosts;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public authService: AuthService,\n    private blogService: BlogService,\n    private router: Router\n  ) {\n    this.createNewBlogForm();\n  }\n\n  createNewBlogForm() {\n    this.form = this.formBuilder.group({\n      title: [\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.maxLength(50),\n          Validators.minLength(5)\n        ])\n      ],\n      body: [\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.maxLength(640),\n          Validators.minLength(5)\n        ])\n      ]\n    });\n  }\n\n  enableFormNewBlogForm() {\n    this.form.get(\"title\").enable();\n    this.form.get(\"body\").enable();\n  }\n\n  disableFormNewBlogForm() {\n    this.form.get(\"title\").disable();\n    this.form.get(\"body\").disable();\n  }\n\n  newBlogForm() {\n    this.newPost = true;\n  }\n\n  reloadBlogs() {\n    this.loadingBlogs = true;\n    this.getAllBlogs();\n    setTimeout(() => {\n      this.loadingBlogs = false;\n    }, 4000);\n  }\n\n  onBlogSubmit() {\n    this.processing = true;\n    this.disableFormNewBlogForm();\n\n    const blog = {\n      title: this.form.get(\"title\").value,\n      body: this.form.get(\"body\").value,\n      createdBy: this.user.username\n    };\n\n    this.blogService.newBlog(blog).subscribe(data => {\n      if ((data as any).success) {\n        this.messageClass = \"alert alert-success\";\n        this.message = (data as any).message;\n        this.getAllBlogs();\n        setTimeout(() => {\n          this.newPost = false;\n          this.processing = false;\n          this.message = false;\n          this.form.reset();\n          this.enableFormNewBlogForm();\n        }, 2000);\n      } else {\n        this.messageClass = \"alert alert-danger\";\n        this.message = (data as any).message;\n        this.processing = false;\n        this.enableFormNewBlogForm();\n      }\n    });\n  }\n\n  goBack() {\n    window.location.reload();\n  }\n\n  getAllBlogs() {\n    this.blogService.getAllBlogs().subscribe(data => {\n      this.blogPosts = (data as any).blogs;\n    });\n  }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = (profile as any).user;\n    });\n\n    this.getAllBlogs();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container my-3\\\">\\n  <div class=\\\"col-lg-6 col-md-8 mx-auto\\\" *ngIf=\\\"foundBlog\\\">\\n    <div [ngClass]=\\\"messageClass\\\" class=\\\"\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n      {{message}}\\n    </div>\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-header\\\">\\n        Please confirm\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        Are you sure you want to delete\\n        <strong>{{blog.title}}</strong>? Once deleted, this action cannot be undone.\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button [disabled]=\\\"processing\\\" (click)=\\\"deleteBlog()\\\" type=\\\"button\\\" class=\\\"btn btn-outline-danger btn-sm mr-2\\\" data-dismiss=\\\"\\\">\\n          <i class=\\\"fa fa-trash-alt mr-2\\\"></i>Delete</button>\\n        <button [disabled]=\\\"processing\\\" (click)=\\\"goBack()\\\" type=\\\"button\\\" class=\\\"btn btn-outline-warning btn-sm\\\">\\n          <i class=\\\"fas fa-times-circle mr-1\\\"></i> Cancel</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Location } from \"@angular/common\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { BlogService } from \"../../../services/blog.service\";\n\n@Component({\n  selector: \"app-delete-blog\",\n  templateUrl: \"./delete-blog.component.html\",\n  styleUrls: [\"./delete-blog.component.css\"]\n})\nexport class DeleteBlogComponent implements OnInit {\n  message;\n  messageClass;\n  foundBlog = false;\n  processing = false;\n  blog;\n  currentUrl;\n\n  constructor(\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private blogService: BlogService,\n    private router: Router\n  ) {}\n\n  deleteBlog() {\n    console.log(\"clicked\");\n    this.processing = true;\n    this.blogService.deleteBlog(this.currentUrl.id).subscribe(data => {\n      console.log(\"clicked and goes to the service\");\n      if ((data as any).success === false) {\n        this.messageClass = \"alert alert-danger\";\n        this.message = (data as any).message;\n        console.log(\"fail\");\n      } else {\n        this.messageClass = \"alert alert-success\";\n        this.message = (data as any).message;\n        setTimeout(() => {\n          this.router.navigate([\"/blog\"]);\n        }, 2000);\n        console.log(\"deleted\");\n      }\n    });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  ngOnInit() {\n    this.currentUrl = this.activatedRoute.snapshot.params;\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data => {\n      if ((data as any).success == false) {\n        this.messageClass = \"alert alert-danger\";\n        this.message = (data as any).message;\n      } else {\n        this.blog = {\n          title: (data as any).blog.title\n        };\n        this.foundBlog = true;\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container my-3\\\">\\n  <div [ngClass]=\\\"messageClass\\\" class=\\\"\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n    {{message}}\\n  </div>\\n  <div class=\\\"card shadow\\\" *ngIf=\\\"!loading\\\">\\n    <div class=\\\"card-header\\\">\\n      edit blog post\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <!-- Edit Blog Form -->\\n      <form (submit)=\\\"updateBlogSubmit()\\\">\\n\\n        <!-- Title Field -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"title\\\">Title</label>\\n          <!-- Title Input -->\\n          <input [disabled]=\\\"processing\\\" type=\\\"text\\\" name=\\\"title\\\" placeholder=\\\"*Blog Title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"blog.title\\\"\\n          />\\n        </div>\\n\\n        <!-- Body Field -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"body\\\">Body</label>\\n          <!-- Body Input -->\\n          <textarea [disabled]=\\\"processing\\\" name=\\\"body\\\" rows=\\\"5\\\" [(ngModel)]=\\\"blog.body\\\" class=\\\"form-control\\\" placeholder=\\\"*Blog Body\\\"></textarea>\\n        </div>\\n\\n        <!-- Save Changes Button -->\\n        <button [disabled]=\\\"processing\\\" type=\\\"submit\\\" name=\\\"save\\\" class=\\\"btn btn-outline-success mr-2\\\">Save Changes</button>\\n        <!-- Go Back Button -->\\n        <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-outline-warning mr-2\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n        <!-- Delete Button -->\\n        <a [routerLink]=\\\"['/delete-blog/', blog._id]\\\">\\n          <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-outline-danger\\\">Delete</button>\\n        </a>\\n\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Location } from \"@angular/common\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { BlogService } from \"../../../services/blog.service\";\n\n@Component({\n  selector: \"app-edit-blog\",\n  templateUrl: \"./edit-blog.component.html\",\n  styleUrls: [\"./edit-blog.component.css\"]\n})\nexport class EditBlogComponent implements OnInit {\n  message;\n  messageClass;\n  blog;\n  processing = false;\n  currentUrl;\n  loading = true;\n\n  constructor(\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private blogService: BlogService,\n    private router: Router\n  ) {}\n\n  updateBlogSubmit() {\n    this.processing = true;\n    this.blogService.editBlog(this.blog).subscribe(data => {\n      if ((data as any).success == true) {\n        console.log(\"clicked we are good!\");\n        this.messageClass = \"alert alert-success\";\n        this.message = (data as any).message;\n        setTimeout(() => {\n          this.router.navigate([\"/blog\"]);\n        }, 2000);\n      } else {\n        console.log(\"clicked but failed proccess\");\n        this.messageClass = \"alert alert-danger\";\n        this.message = (data as any).message;\n        this.processing = false;\n      }\n    });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  ngOnInit() {\n    this.currentUrl = this.activatedRoute.snapshot.params;\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data => {\n      if ((data as any).success == false) {\n        this.messageClass = \"alert alert-danger\";\n        this.message = (data as any).message;\n      } else {\n        this.blog = (data as any).blog;\n        this.loading = false;\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container my-3\\\">\\n  <div [ngClass]=\\\"messageClass\\\" class=\\\"\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\n    {{message}}\\n  </div>\\n  <div class=\\\"card shadow\\\" *ngIf=\\\"!loading\\\">\\n    <div class=\\\"card-body\\\">\\n      <h3 class=\\\"text-capitalize\\\">{{blog.title}}</h3>\\n      <span class=\\\"text-muted small\\\">Created by: {{blog.createdBy}} | Created on: {{blog.createdAt | date:\\\"MMM dd, yyyy\\\"}}</span>\\n      <hr>\\n      <p>{{blog.body}}</p>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { BlogService } from \"../../../services/blog.service\";\n\n@Component({\n  selector: \"app-read-blog\",\n  templateUrl: \"./read-blog.component.html\",\n  styleUrls: [\"./read-blog.component.css\"]\n})\nexport class ReadBlogComponent implements OnInit {\n  message;\n  blog;\n  messageClass;\n  currentUrl;\n  loading = true;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private blogService: BlogService\n  ) {}\n\n  ngOnInit() {\n    this.currentUrl = this.activatedRoute.snapshot.params;\n    this.blogService.readBlog(this.currentUrl.id).subscribe(data => {\n      if ((data as any).success == false) {\n        this.messageClass = \"alert alert-danger\";\n        this.message = (data as any).message;\n      } else {\n        this.blog = (data as any).blog;\n        this.loading = false;\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-3\\\">\\n  <div class=\\\"card shadow\\\">\\n    <div class=\\\"card-header\\\">\\n      welcome to your dashboard\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ullam animi ipsum placeat eos nulla quaerat ex architecto et praesentium.\\n      Laboriosam ea quaerat sequi consectetur dolore molestias nulla facere corporis rerum?\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n})\nexport class DashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"cover\\\">\\n  <div class=\\\"cover-text\\\">\\n    <h1 class=\\\"display-3 text-light font-weight-bold\\\">\\n      Get started\\n    </h1>\\n    <div class=\\\"btn-group-vertical\\\">\\n      <a href=\\\"#\\\" routerLink=\\\"/login\\\" *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"btn btn-outline-light btn-lg px-5\\\">Already a member?</a>\\n      <a href=\\\"#\\\" routerLink=\\\"/register\\\" *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"btn btn-outline-light btn-lg px-5\\\">Not yet a member?</a>\\n      <a href=\\\"#\\\" routerLink=\\\"/dashboard\\\" *ngIf=\\\"authService.loggedIn()\\\" class=\\\"btn btn-outline-light btn-lg px-5\\\">Start writing awesome stuff!</a>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent implements OnInit {\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"vertical-align\\\">\\n  <div class=\\\"vertical-align-item\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6 col-md-8 mx-auto\\\">\\n          <!-- Custom Success/Error Message -->\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"\\\" role=\\\"alert\\\">\\n            {{message}}\\n          </div>\\n          <div class=\\\"card shadow\\\">\\n            <div class=\\\"card-header\\\">\\n              Sign-in\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <!-- Login Form -->\\n              <form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\n                <!-- Username Field -->\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"username\\\">Username</label>\\n                  <input [ngClass]=\\\"{'is-invalid': form.controls.username.errors && form.controls.username.dirty, 'is-valid': form.controls.username.valid && form.controls.username.dirty }\\\"\\n                    class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\" />\\n                  <!-- Validation -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required.</li>\\n                  </div>\\n                </div>\\n                <!-- Password Field  -->\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"password\\\">Password</label>\\n                  <input [ngClass]=\\\"{'is-invalid': form.controls.password.errors && form.controls.password.dirty, 'is-valid': form.controls.password.valid && form.controls.password.dirty }\\\"\\n                    class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\"\\n                  />\\n                  <!-- Validation -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\n                  </div>\\n                </div>\\n                <!-- Submit Button -->\\n                <button [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-outline-success\\\" type=\\\"submit\\\">\\n                  <i class=\\\"fa fa-check-circle mr-2\\\"></i>Sign-in</button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from \"@angular/forms\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { AuthGuard } from \"../../guards/auth.guard\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  messageClass;\n  message;\n  processing = false;\n  form;\n  previousUrl;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private authGuard: AuthGuard,\n    private router: Router\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  disableForm() {\n    this.form.controls[\"username\"].disable();\n    this.form.controls[\"password\"].disable();\n  }\n\n  enableForm() {\n    this.form.controls[\"username\"].enable();\n    this.form.controls[\"password\"].enable();\n  }\n\n  onLoginSubmit() {\n    this.processing = true;\n    this.disableForm();\n\n    const user = {\n      username: this.form.get(\"username\").value,\n      password: this.form.get(\"password\").value\n    };\n\n    this.authService.login(user).subscribe(data => {\n      if ((data as any).success === true) {\n        this.messageClass = \"alert alert-success\";\n        this.message = (data as any).message;\n        this.authService.storeUserData((data as any).token, (data as any).user);\n        setTimeout(() => {\n          if (this.previousUrl) {\n            this.router.navigate([this.previousUrl]);\n          } else {\n            this.router.navigate([\"/dashboard\"]);\n          }\n        }, 2000);\n      } else {\n        this.messageClass = \"alert alert-danger\";\n        this.message = (data as any).message;\n        this.processing = false;\n        this.enableForm();\n      }\n    });\n  }\n\n  ngOnInit() {\n    if (this.authGuard.redirectUrl) {\n      this.messageClass = \"alert alert-danger\";\n      this.message = \"Access denied. Please Log-in\";\n      this.previousUrl = this.authGuard.redirectUrl;\n      this.authGuard.redirectUrl = undefined;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-light bg-light shadow\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\" routerLink=\\\"/\\\">MeanBlog</a>\\n    <button class=\\\"navbar-toggler hidden-lg-up\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavId\\\" aria-controls=\\\"collapsibleNavId\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavId\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/\\\">Home</a>\\n        </li>\\n      </ul>\\n      <ul *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n      </ul>\\n      <ul *ngIf=\\\"authService.loggedIn()\\\" class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/blog\\\">Blog</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/profile\\\">Profile</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit {\n  constructor(public authService: AuthService, private router: Router) {}\n\n  ngOnInit() {}\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.router.navigate([\"/\"]);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-3\\\" *ngIf=\\\"user\\\">\\n  <div class=\\\"card shadow\\\">\\n    <div class=\\\"card-header\\\">\\n      {{user.username}}\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      {{user.email}}\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.css\"]\n})\nexport class ProfileComponent implements OnInit {\n  user: object;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = (profile as any).user;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"vertical-align\\\">\\n  <div class=\\\"vertical-align-item\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6 col-md-8 mx-auto\\\">\\n          <div [ngClass]=\\\"messageClass\\\" class=\\\"\\\" role=\\\"alert\\\">\\n            {{message}}\\n          </div>\\n          <div class=\\\"card shadow\\\">\\n            <div class=\\\"card-header\\\">\\n              Sign-up\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n\\n                <!-- Username Input -->\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"username\\\">Username</label>\\n                  <input [ngClass]=\\\"{'is-invalid': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'is-valid': !form.controls.username.errors && usernameValid}\\\"\\n                    type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"Username\\\" formControlName=\\\"username\\\"\\n                    (blur)=\\\"checkUsername()\\\" />\\n                  <!-- Validation -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <span *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required</span>\\n                    <span *ngIf=\\\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \\\">Minimum characters: 3, Maximum characters: 15</span>\\n                    <span *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\\\">Username must not have any special characters</span>\\n                    <span *ngIf=\\\"usernameMessage\\\">{{usernameMessage}}</span>\\n                  </div>\\n                  <!-- <div class=\\\"invalid-feedback\\\">\\n                                <span *ngIf=\\\"usernameMessage\\\">{{usernameMessage}}</span>\\n                              </div> -->\\n                </div>\\n\\n                <!-- Email Input -->\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"email\\\">Email</label>\\n                  <input [ngClass]=\\\"{'is-invalid': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'is-valid': !form.controls.email.errors && emailValid}\\\"\\n                    type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\"\\n                    (blur)=\\\"checkEmail()\\\" />\\n                  <!-- Validation -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <span *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</span>\\n                    <span *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</span>\\n                    <span *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</span>\\n                    <span *ngIf=\\\"usernameMessage\\\">{{emailMessage}}</span>\\n                  </div>\\n                </div>\\n\\n                <!-- Password Input -->\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"password\\\">Password</label>\\n                  <input [ngClass]=\\\"{'is-invalid': (form.controls.password.errors && form.controls.password.dirty), 'is-valid': !form.controls.password.errors}\\\"\\n                    type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\"\\n                  />\\n                  <!-- Validation -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <span *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</span>\\n                    <span *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</span>\\n                    <span *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 35</span>\\n                  </div>\\n                </div>\\n\\n                <!-- Confirm Password Input -->\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"confirm\\\">Confirm Password</label>\\n                  <input [ngClass]=\\\"{'is-invalid': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'is-valid': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\"\\n                    type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirm\\\"\\n                  />\\n                  <!-- Validation -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <span *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</span>\\n                    <span *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</span>\\n                  </div>\\n                </div>\\n\\n                <!-- Submit Input -->\\n                <button [disabled]=\\\"!form.valid || processing || !emailValid || !usernameValid\\\" type=\\\"submit\\\" class=\\\"btn btn-outline-success\\\">\\n                  <i class=\\\"fa fa-check-circle mr-2\\\"></i>Sign-up</button>\\n\\n              </form>\\n              <!-- Registration Form /-->\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormsModule\n} from \"@angular/forms\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.css\"]\n})\nexport class RegisterComponent implements OnInit {\n  form;\n  message;\n  messageClass;\n  processing = false;\n  emailValid;\n  emailMessage;\n  usernameValid;\n  usernameMessage;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group(\n      {\n        email: [\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(5),\n            Validators.maxLength(30),\n            this.validateEmail\n          ])\n        ],\n        username: [\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(5),\n            Validators.maxLength(15)\n          ])\n        ],\n        password: [\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(5),\n            Validators.maxLength(15)\n          ])\n        ],\n        confirm: [\n          \"\",\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(5),\n            Validators.maxLength(15)\n          ])\n        ]\n      },\n      { validator: this.matchingPasswords(\"password\", \"confirm\") }\n    );\n  }\n\n  disableForm() {\n    this.form.controls[\"email\"].disable();\n    this.form.controls[\"username\"].disable();\n    this.form.controls[\"password\"].disable();\n    this.form.controls[\"confirm\"].disable();\n  }\n\n  enableForm() {\n    this.form.controls[\"email\"].enable();\n    this.form.controls[\"username\"].enable();\n    this.form.controls[\"password\"].enable();\n    this.form.controls[\"confirm\"].enable();\n  }\n\n  validateEmail(controls) {\n    const regExp = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return { validateEmail: true };\n    }\n  }\n\n  matchingPasswords(password, confirm) {\n    return (group: FormGroup) => {\n      if (group.controls[password].value === group.controls[confirm].value) {\n        return null;\n      } else {\n        return { matchingPasswords: true };\n      }\n    };\n  }\n\n  onRegisterSubmit() {\n    this.processing = true;\n    this.disableForm();\n    const user = {\n      email: this.form.get(\"email\").value,\n      username: this.form.get(\"username\").value,\n      password: this.form.get(\"password\").value\n    };\n\n    this.authService.registerUser(user).subscribe(data => {\n      if ((data as any).success) {\n        this.messageClass = \"alert alert-success\";\n        this.message = (data as any).message;\n        setTimeout(() => {\n          this.router.navigate([\"/login\"]);\n        }, 2000);\n      } else {\n        this.messageClass = \"alert alert-danger\";\n        this.message = (data as any).message;\n        this.processing = false;\n        this.enableForm();\n      }\n    });\n  }\n\n  // check the email\n  checkEmail() {\n    this.authService\n      .checkEmail(this.form.get(\"email\").value)\n      .subscribe(data => {\n        if ((data as any).success) {\n          this.emailValid = true;\n          this.emailMessage = (data as any).message;\n        } else {\n          this.emailValid = false;\n          this.emailMessage = (data as any).message;\n        }\n      });\n  }\n\n  // check the username\n  checkUsername() {\n    this.authService\n      .checkUsername(this.form.get(\"username\").value)\n      .subscribe(data => {\n        if ((data as any).success) {\n          this.usernameValid = true;\n          this.usernameMessage = (data as any).message;\n        } else {\n          this.usernameValid = false;\n          this.usernameMessage = (data as any).message;\n        }\n      });\n  }\n\n  ngOnInit() {}\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  redirectUrl;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  // Function to check if user is authorized to view route\n  canActivate(router: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // Check if user is logge din\n    if (this.authService.loggedIn()) {\n      return true; // Return true: User is allowed to view route\n    } else {\n      this.redirectUrl = state.url; // Grab previous urul\n      this.router.navigate([\"/login\"]); // Return error and route to login page\n      return false; // Return false: user not authorized to view page\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable()\nexport class NotAuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  // Function to determine whether user is authorized to view route\n  canActivate() {\n    // Check if user is logged in\n    if (this.authService.loggedIn()) {\n      this.router.navigate([\"/dashboard\"]); // Return error, route to home\n      return false; // Return false: user not allowed to view route\n    } else {\n      return true; // Return true: user is allowed to view route\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport \"rxjs/add/operator/map\";\nimport { tokenNotExpired } from \"angular2-jwt\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n  // domain = \"http://localhost:5000/\";\n  domain = \"\";\n  authToken;\n  user;\n  options;\n\n  constructor(private http: HttpClient) {}\n\n  loadToken() {\n    const token = localStorage.getItem(\"token\");\n    this.authToken = token;\n  }\n\n  // register the user\n  registerUser(user) {\n    let headers = new HttpHeaders();\n    headers.append(\"Content-type\", \"applications/json\");\n    return this.http.post(this.domain + \"authentication/register\", user, {\n      headers\n    });\n  }\n\n  // check username\n  checkUsername(username) {\n    let headers = new HttpHeaders();\n    headers.append(\"Content-type\", \"applications/json\");\n    return this.http.get(\n      this.domain + \"authentication/checkUsername/\" + username,\n      { headers }\n    );\n  }\n\n  // check email\n  checkEmail(email) {\n    let headers = new HttpHeaders();\n    headers.append(\"Content-type\", \"applications/json\");\n    return this.http.get(this.domain + \"authentication/checkEmail/\" + email, {\n      headers\n    });\n  }\n\n  login(user) {\n    let headers = new HttpHeaders();\n    headers.append(\"Content-type\", \"applications/json\");\n    return this.http.post(this.domain + \"authentication/login\", user, {\n      headers\n    });\n  }\n\n  loggedIn() {\n    return tokenNotExpired();\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  // localstorage\n  storeUserData(token, user) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  getProfile() {\n    this.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authToken\n    });\n    return this.http.get(this.domain + \"authentication/profile\", {\n      headers\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { AuthService } from \"./auth.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class BlogService {\n  options;\n  domain = this.authService.domain;\n\n  constructor(private authService: AuthService, private http: HttpClient) {}\n\n  // cteate a new blog post\n  newBlog(blog) {\n    this.authService.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authService.authToken\n    });\n    return this.http.post(this.domain + \"blog/newBlog\", blog, {\n      headers\n    });\n  }\n\n  getAllBlogs() {\n    this.authService.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authService.authToken\n    });\n    return this.http.get(this.domain + \"blog/allBlogs\", {\n      headers\n    });\n  }\n\n  getSingleBlog(id) {\n    this.authService.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authService.authToken\n    });\n    return this.http.get(this.domain + \"blog/singleBlog/\" + id, {\n      headers\n    });\n  }\n\n  readBlog(id) {\n    this.authService.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authService.authToken\n    });\n    return this.http.get(this.domain + \"blog/readBlog/\" + id, {\n      headers\n    });\n  }\n\n  editBlog(blog) {\n    this.authService.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authService.authToken\n    });\n    return this.http.put(this.domain + \"blog/updateBlog/\", blog, {\n      headers\n    });\n  }\n\n  deleteBlog(id) {\n    this.authService.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authService.authToken\n    });\n    return this.http.delete(this.domain + \"blog/deleteBlog/\" + id, {\n      headers\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}